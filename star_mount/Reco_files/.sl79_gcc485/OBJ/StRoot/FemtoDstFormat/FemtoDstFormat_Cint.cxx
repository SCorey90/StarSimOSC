//
// File generated by rootcint at Tue Oct 24 19:08:15 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl79_gcc485dIOBJdIStRootdIFemtoDstFormatdIFemtoDstFormat_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "FemtoDstFormat_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void FemtoDstBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FemtoDstBranch(void *p);
   static void deleteArray_FemtoDstBranch(void *p);
   static void destruct_FemtoDstBranch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoDstBranch*)
   {
      ::FemtoDstBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoDstBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoDstBranch", ::FemtoDstBranch::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoDstBranch.h", 7,
                  typeid(::FemtoDstBranch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoDstBranch::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoDstBranch) );
      instance.SetDelete(&delete_FemtoDstBranch);
      instance.SetDeleteArray(&deleteArray_FemtoDstBranch);
      instance.SetDestructor(&destruct_FemtoDstBranch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoDstBranch*)
   {
      return GenerateInitInstanceLocal((::FemtoDstBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoDstBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoBTofPidTraits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoBTofPidTraits(void *p = 0);
   static void *newArray_FemtoBTofPidTraits(Long_t size, void *p);
   static void delete_FemtoBTofPidTraits(void *p);
   static void deleteArray_FemtoBTofPidTraits(void *p);
   static void destruct_FemtoBTofPidTraits(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoBTofPidTraits*)
   {
      ::FemtoBTofPidTraits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoBTofPidTraits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoBTofPidTraits", ::FemtoBTofPidTraits::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoBTofPidTraits.h", 8,
                  typeid(::FemtoBTofPidTraits), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoBTofPidTraits::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoBTofPidTraits) );
      instance.SetNew(&new_FemtoBTofPidTraits);
      instance.SetNewArray(&newArray_FemtoBTofPidTraits);
      instance.SetDelete(&delete_FemtoBTofPidTraits);
      instance.SetDeleteArray(&deleteArray_FemtoBTofPidTraits);
      instance.SetDestructor(&destruct_FemtoBTofPidTraits);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoBTofPidTraits*)
   {
      return GenerateInitInstanceLocal((::FemtoBTofPidTraits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoBTofPidTraits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoEvent(void *p = 0);
   static void *newArray_FemtoEvent(Long_t size, void *p);
   static void delete_FemtoEvent(void *p);
   static void deleteArray_FemtoEvent(void *p);
   static void destruct_FemtoEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoEvent*)
   {
      ::FemtoEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoEvent", ::FemtoEvent::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoEvent.h", 7,
                  typeid(::FemtoEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoEvent::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoEvent) );
      instance.SetNew(&new_FemtoEvent);
      instance.SetNewArray(&newArray_FemtoEvent);
      instance.SetDelete(&delete_FemtoEvent);
      instance.SetDeleteArray(&deleteArray_FemtoEvent);
      instance.SetDestructor(&destruct_FemtoEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoEvent*)
   {
      return GenerateInitInstanceLocal((::FemtoEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoMcTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoMcTrack(void *p = 0);
   static void *newArray_FemtoMcTrack(Long_t size, void *p);
   static void delete_FemtoMcTrack(void *p);
   static void deleteArray_FemtoMcTrack(void *p);
   static void destruct_FemtoMcTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoMcTrack*)
   {
      ::FemtoMcTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoMcTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoMcTrack", ::FemtoMcTrack::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoMcTrack.h", 10,
                  typeid(::FemtoMcTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoMcTrack::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoMcTrack) );
      instance.SetNew(&new_FemtoMcTrack);
      instance.SetNewArray(&newArray_FemtoMcTrack);
      instance.SetDelete(&delete_FemtoMcTrack);
      instance.SetDeleteArray(&deleteArray_FemtoMcTrack);
      instance.SetDestructor(&destruct_FemtoMcTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoMcTrack*)
   {
      return GenerateInitInstanceLocal((::FemtoMcTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoMcTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoMcVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoMcVertex(void *p = 0);
   static void *newArray_FemtoMcVertex(Long_t size, void *p);
   static void delete_FemtoMcVertex(void *p);
   static void deleteArray_FemtoMcVertex(void *p);
   static void destruct_FemtoMcVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoMcVertex*)
   {
      ::FemtoMcVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoMcVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoMcVertex", ::FemtoMcVertex::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoMcVertex.h", 17,
                  typeid(::FemtoMcVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoMcVertex::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoMcVertex) );
      instance.SetNew(&new_FemtoMcVertex);
      instance.SetNewArray(&newArray_FemtoMcVertex);
      instance.SetDelete(&delete_FemtoMcVertex);
      instance.SetDeleteArray(&deleteArray_FemtoMcVertex);
      instance.SetDestructor(&destruct_FemtoMcVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoMcVertex*)
   {
      return GenerateInitInstanceLocal((::FemtoMcVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoMcVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoMtdPidTraits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoMtdPidTraits(void *p = 0);
   static void *newArray_FemtoMtdPidTraits(Long_t size, void *p);
   static void delete_FemtoMtdPidTraits(void *p);
   static void deleteArray_FemtoMtdPidTraits(void *p);
   static void destruct_FemtoMtdPidTraits(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoMtdPidTraits*)
   {
      ::FemtoMtdPidTraits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoMtdPidTraits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoMtdPidTraits", ::FemtoMtdPidTraits::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoMtdPidTraits.h", 8,
                  typeid(::FemtoMtdPidTraits), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoMtdPidTraits::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoMtdPidTraits) );
      instance.SetNew(&new_FemtoMtdPidTraits);
      instance.SetNewArray(&newArray_FemtoMtdPidTraits);
      instance.SetDelete(&delete_FemtoMtdPidTraits);
      instance.SetDeleteArray(&deleteArray_FemtoMtdPidTraits);
      instance.SetDestructor(&destruct_FemtoMtdPidTraits);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoMtdPidTraits*)
   {
      return GenerateInitInstanceLocal((::FemtoMtdPidTraits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoMtdPidTraits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoTrack(void *p = 0);
   static void *newArray_FemtoTrack(Long_t size, void *p);
   static void delete_FemtoTrack(void *p);
   static void deleteArray_FemtoTrack(void *p);
   static void destruct_FemtoTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoTrack*)
   {
      ::FemtoTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoTrack", ::FemtoTrack::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoTrack.h", 12,
                  typeid(::FemtoTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoTrack::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoTrack) );
      instance.SetNew(&new_FemtoTrack);
      instance.SetNewArray(&newArray_FemtoTrack);
      instance.SetDelete(&delete_FemtoTrack);
      instance.SetDeleteArray(&deleteArray_FemtoTrack);
      instance.SetDestructor(&destruct_FemtoTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoTrack*)
   {
      return GenerateInitInstanceLocal((::FemtoTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FemtoTrackHelix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FemtoTrackHelix(void *p = 0);
   static void *newArray_FemtoTrackHelix(Long_t size, void *p);
   static void delete_FemtoTrackHelix(void *p);
   static void deleteArray_FemtoTrackHelix(void *p);
   static void destruct_FemtoTrackHelix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FemtoTrackHelix*)
   {
      ::FemtoTrackHelix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FemtoTrackHelix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FemtoTrackHelix", ::FemtoTrackHelix::Class_Version(), ".sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoTrackHelix.h", 8,
                  typeid(::FemtoTrackHelix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FemtoTrackHelix::Dictionary, isa_proxy, 4,
                  sizeof(::FemtoTrackHelix) );
      instance.SetNew(&new_FemtoTrackHelix);
      instance.SetNewArray(&newArray_FemtoTrackHelix);
      instance.SetDelete(&delete_FemtoTrackHelix);
      instance.SetDeleteArray(&deleteArray_FemtoTrackHelix);
      instance.SetDestructor(&destruct_FemtoTrackHelix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FemtoTrackHelix*)
   {
      return GenerateInitInstanceLocal((::FemtoTrackHelix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FemtoTrackHelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr FemtoDstBranch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoDstBranch::Class_Name()
{
   return "FemtoDstBranch";
}

//______________________________________________________________________________
const char *FemtoDstBranch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoDstBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoDstBranch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoDstBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoDstBranch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoDstBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoDstBranch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoDstBranch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoBTofPidTraits::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoBTofPidTraits::Class_Name()
{
   return "FemtoBTofPidTraits";
}

//______________________________________________________________________________
const char *FemtoBTofPidTraits::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoBTofPidTraits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoBTofPidTraits::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoBTofPidTraits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoBTofPidTraits::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoBTofPidTraits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoBTofPidTraits::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoBTofPidTraits*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoEvent::Class_Name()
{
   return "FemtoEvent";
}

//______________________________________________________________________________
const char *FemtoEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoMcTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoMcTrack::Class_Name()
{
   return "FemtoMcTrack";
}

//______________________________________________________________________________
const char *FemtoMcTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoMcTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoMcTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoMcTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoMcVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoMcVertex::Class_Name()
{
   return "FemtoMcVertex";
}

//______________________________________________________________________________
const char *FemtoMcVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoMcVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoMcVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoMcVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMcVertex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoMtdPidTraits::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoMtdPidTraits::Class_Name()
{
   return "FemtoMtdPidTraits";
}

//______________________________________________________________________________
const char *FemtoMtdPidTraits::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMtdPidTraits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoMtdPidTraits::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMtdPidTraits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoMtdPidTraits::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMtdPidTraits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoMtdPidTraits::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoMtdPidTraits*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoTrack::Class_Name()
{
   return "FemtoTrack";
}

//______________________________________________________________________________
const char *FemtoTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FemtoTrackHelix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FemtoTrackHelix::Class_Name()
{
   return "FemtoTrackHelix";
}

//______________________________________________________________________________
const char *FemtoTrackHelix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrackHelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FemtoTrackHelix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrackHelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FemtoTrackHelix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrackHelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FemtoTrackHelix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FemtoTrackHelix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void FemtoBTofPidTraits::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoBTofPidTraits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoBTofPidTraits::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoBTofPidTraits::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoBTofPidTraits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoBTofPidTraits.
      TClass *R__cl = ::FemtoBTofPidTraits::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofBeta", &mBTofBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofYLocal", &mBTofYLocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofZLocal", &mBTofZLocal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofMatchFlag", &mBTofMatchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIdTruth", &mIdTruth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLength", &mLength);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoBTofPidTraits(void *p) {
      return  p ? new(p) ::FemtoBTofPidTraits : new ::FemtoBTofPidTraits;
   }
   static void *newArray_FemtoBTofPidTraits(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoBTofPidTraits[nElements] : new ::FemtoBTofPidTraits[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoBTofPidTraits(void *p) {
      delete ((::FemtoBTofPidTraits*)p);
   }
   static void deleteArray_FemtoBTofPidTraits(void *p) {
      delete [] ((::FemtoBTofPidTraits*)p);
   }
   static void destruct_FemtoBTofPidTraits(void *p) {
      typedef ::FemtoBTofPidTraits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoBTofPidTraits

//______________________________________________________________________________
void FemtoDstBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoDstBranch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoDstBranch::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoDstBranch::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoDstBranch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoDstBranch.
      TClass *R__cl = ::FemtoDstBranch::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_FemtoDstBranch(void *p) {
      delete ((::FemtoDstBranch*)p);
   }
   static void deleteArray_FemtoDstBranch(void *p) {
      delete [] ((::FemtoDstBranch*)p);
   }
   static void destruct_FemtoDstBranch(void *p) {
      typedef ::FemtoDstBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoDstBranch

//______________________________________________________________________________
void FemtoEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoEvent::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoEvent.
      TClass *R__cl = ::FemtoEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPrimaryVertex_mX1", &mPrimaryVertex_mX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPrimaryVertex_mX2", &mPrimaryVertex_mX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPrimaryVertex_mX3", &mPrimaryVertex_mX3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWeight", &mWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunId", &mRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEventId", &mEventId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerWord", &mTriggerWord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerWordMtd", &mTriggerWordMtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGRefMult", &mGRefMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPsi2", &mPsi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBin16", &mBin16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunIndex", &mRunIndex);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoEvent(void *p) {
      return  p ? new(p) ::FemtoEvent : new ::FemtoEvent;
   }
   static void *newArray_FemtoEvent(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoEvent[nElements] : new ::FemtoEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoEvent(void *p) {
      delete ((::FemtoEvent*)p);
   }
   static void deleteArray_FemtoEvent(void *p) {
      delete [] ((::FemtoEvent*)p);
   }
   static void destruct_FemtoEvent(void *p) {
      typedef ::FemtoEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoEvent

//______________________________________________________________________________
void FemtoMcTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoMcTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoMcTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoMcTrack::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoMcTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoMcTrack.
      TClass *R__cl = ::FemtoMcTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPt", &mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEta", &mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGeantPID", &mGeantPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCharge", &mCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergy", &mEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNHits", &mNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParentIndex", &mParentIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAssociatedIndex", &mAssociatedIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStartVertexIndex", &mStartVertexIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStopVertexIndex", &mStopVertexIndex);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoMcTrack(void *p) {
      return  p ? new(p) ::FemtoMcTrack : new ::FemtoMcTrack;
   }
   static void *newArray_FemtoMcTrack(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoMcTrack[nElements] : new ::FemtoMcTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoMcTrack(void *p) {
      delete ((::FemtoMcTrack*)p);
   }
   static void deleteArray_FemtoMcTrack(void *p) {
      delete [] ((::FemtoMcTrack*)p);
   }
   static void destruct_FemtoMcTrack(void *p) {
      typedef ::FemtoMcTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoMcTrack

//______________________________________________________________________________
void FemtoMcVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoMcVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoMcVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoMcVertex::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoMcVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoMcVertex.
      TClass *R__cl = ::FemtoMcVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX", &mX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mY", &mY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZ", &mZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParentIndex", &mParentIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGeantProcess", &mGeantProcess);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoMcVertex(void *p) {
      return  p ? new(p) ::FemtoMcVertex : new ::FemtoMcVertex;
   }
   static void *newArray_FemtoMcVertex(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoMcVertex[nElements] : new ::FemtoMcVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoMcVertex(void *p) {
      delete ((::FemtoMcVertex*)p);
   }
   static void deleteArray_FemtoMcVertex(void *p) {
      delete [] ((::FemtoMcVertex*)p);
   }
   static void destruct_FemtoMcVertex(void *p) {
      typedef ::FemtoMcVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoMcVertex

//______________________________________________________________________________
void FemtoMtdPidTraits::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoMtdPidTraits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoMtdPidTraits::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoMtdPidTraits::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoMtdPidTraits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoMtdPidTraits.
      TClass *R__cl = ::FemtoMtdPidTraits::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDeltaY", &mDeltaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDeltaZ", &mDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDeltaTimeOfFlight", &mDeltaTimeOfFlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMatchFlag", &mMatchFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMtdHitChan", &mMtdHitChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerFlag", &mTriggerFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIdTruth", &mIdTruth);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoMtdPidTraits(void *p) {
      return  p ? new(p) ::FemtoMtdPidTraits : new ::FemtoMtdPidTraits;
   }
   static void *newArray_FemtoMtdPidTraits(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoMtdPidTraits[nElements] : new ::FemtoMtdPidTraits[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoMtdPidTraits(void *p) {
      delete ((::FemtoMtdPidTraits*)p);
   }
   static void deleteArray_FemtoMtdPidTraits(void *p) {
      delete [] ((::FemtoMtdPidTraits*)p);
   }
   static void destruct_FemtoMtdPidTraits(void *p) {
      typedef ::FemtoMtdPidTraits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoMtdPidTraits

//______________________________________________________________________________
void FemtoTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoTrack::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoTrack.
      TClass *R__cl = ::FemtoTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPt", &mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEta", &mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofPidTraitsIndex", &mBTofPidTraitsIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMtdPidTraitsIndex", &mMtdPidTraitsIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEmcPidTraitsIndex", &mEmcPidTraitsIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHelixIndex", &mHelixIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMcIndex", &mMcIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDedx", &mDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNHitsFit", &mNHitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNHitsMax", &mNHitsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNHitsDedx", &mNHitsDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigmaPion", &mNSigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigmaKaon", &mNSigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigmaProton", &mNSigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigmaElectron", &mNSigmaElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDCA", &mDCA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChi2", &mChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDCAXY", &mDCAXY);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoTrack(void *p) {
      return  p ? new(p) ::FemtoTrack : new ::FemtoTrack;
   }
   static void *newArray_FemtoTrack(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoTrack[nElements] : new ::FemtoTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoTrack(void *p) {
      delete ((::FemtoTrack*)p);
   }
   static void deleteArray_FemtoTrack(void *p) {
      delete [] ((::FemtoTrack*)p);
   }
   static void destruct_FemtoTrack(void *p) {
      typedef ::FemtoTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoTrack

//______________________________________________________________________________
void FemtoTrackHelix::Streamer(TBuffer &R__b)
{
   // Stream an object of class FemtoTrackHelix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FemtoTrackHelix::Class(),this);
   } else {
      R__b.WriteClassBuffer(FemtoTrackHelix::Class(),this);
   }
}

//______________________________________________________________________________
void FemtoTrackHelix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FemtoTrackHelix.
      TClass *R__cl = ::FemtoTrackHelix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPar[6]", mPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMap0", &mMap0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMap1", &mMap1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDCA", &mDCA);
      FemtoDstBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FemtoTrackHelix(void *p) {
      return  p ? new(p) ::FemtoTrackHelix : new ::FemtoTrackHelix;
   }
   static void *newArray_FemtoTrackHelix(Long_t nElements, void *p) {
      return p ? new(p) ::FemtoTrackHelix[nElements] : new ::FemtoTrackHelix[nElements];
   }
   // Wrapper around operator delete
   static void delete_FemtoTrackHelix(void *p) {
      delete ((::FemtoTrackHelix*)p);
   }
   static void deleteArray_FemtoTrackHelix(void *p) {
      delete [] ((::FemtoTrackHelix*)p);
   }
   static void destruct_FemtoTrackHelix(void *p) {
      typedef ::FemtoTrackHelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FemtoTrackHelix

/********************************************************
* .sl79_gcc485/OBJ/StRoot/FemtoDstFormat/FemtoDstFormat_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableFemtoDstFormat_Cint();

extern "C" void G__set_cpp_environmentFemtoDstFormat_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("FemtoBTofPidTraits.h");
  G__add_compiledheader("FemtoDstBranch.h");
  G__add_compiledheader("FemtoEvent.h");
  G__add_compiledheader("FemtoMcTrack.h");
  G__add_compiledheader("FemtoMcVertex.h");
  G__add_compiledheader("FemtoMtdPidTraits.h");
  G__add_compiledheader("FemtoTrack.h");
  G__add_compiledheader("FemtoTrackHelix.h");
  G__cpp_reset_tagtableFemtoDstFormat_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevFemtoDstFormat_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FemtoDstBranch */
static int G__FemtoDstFormat_Cint_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const FemtoDstBranch*) G__getstructoffset())->classname());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoDstBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoDstBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoDstBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoDstBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoDstBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoDstBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoDstBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoDstBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoDstBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoDstBranch G__TFemtoDstBranch;
static int G__FemtoDstFormat_Cint_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoDstBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoDstBranch*) (soff+(sizeof(FemtoDstBranch)*i)))->~G__TFemtoDstBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoDstBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoDstBranch*) (soff))->~G__TFemtoDstBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoDstBranch* dest = (FemtoDstBranch*) G__getstructoffset();
   *dest = *(FemtoDstBranch*) libp->para[0].ref;
   const FemtoDstBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoBTofPidTraits */
static int G__FemtoDstFormat_Cint_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoBTofPidTraits* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoBTofPidTraits[n];
     } else {
       p = new((void*) gvp) FemtoBTofPidTraits[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoBTofPidTraits;
     } else {
       p = new((void*) gvp) FemtoBTofPidTraits;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoBTofPidTraits*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoBTofPidTraits*) G__getstructoffset())->copy((FemtoBTofPidTraits*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoBTofPidTraits*) G__getstructoffset())->matchFlag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FemtoBTofPidTraits*) G__getstructoffset())->matchFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoBTofPidTraits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoBTofPidTraits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoBTofPidTraits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoBTofPidTraits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoBTofPidTraits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoBTofPidTraits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoBTofPidTraits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoBTofPidTraits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoBTofPidTraits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoBTofPidTraits* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoBTofPidTraits(*(FemtoBTofPidTraits*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoBTofPidTraits G__TFemtoBTofPidTraits;
static int G__FemtoDstFormat_Cint_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoBTofPidTraits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoBTofPidTraits*) (soff+(sizeof(FemtoBTofPidTraits)*i)))->~G__TFemtoBTofPidTraits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoBTofPidTraits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoBTofPidTraits*) (soff))->~G__TFemtoBTofPidTraits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoBTofPidTraits* dest = (FemtoBTofPidTraits*) G__getstructoffset();
   *dest = *(FemtoBTofPidTraits*) libp->para[0].ref;
   const FemtoBTofPidTraits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoEvent */
static int G__FemtoDstFormat_Cint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoEvent[n];
     } else {
       p = new((void*) gvp) FemtoEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoEvent;
     } else {
       p = new((void*) gvp) FemtoEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoEvent*) G__getstructoffset())->copy((FemtoEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((FemtoEvent*) G__getstructoffset())->psi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FemtoEvent*) G__getstructoffset())->year());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoEvent*) G__getstructoffset())->vertex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const FemtoEvent*) G__getstructoffset())->isDiMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const FemtoEvent*) G__getstructoffset())->isDiMuonHFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const FemtoEvent*) G__getstructoffset())->isSingleMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const FemtoEvent*) G__getstructoffset())->isEMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FemtoEvent*) G__getstructoffset())->isMtdTrigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoEvent(*(FemtoEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoEvent G__TFemtoEvent;
static int G__FemtoDstFormat_Cint_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoEvent*) (soff+(sizeof(FemtoEvent)*i)))->~G__TFemtoEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoEvent*) (soff))->~G__TFemtoEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoEvent* dest = (FemtoEvent*) G__getstructoffset();
   *dest = *(FemtoEvent*) libp->para[0].ref;
   const FemtoEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoMcTrack */
static int G__FemtoDstFormat_Cint_224_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMcTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMcTrack[n];
     } else {
       p = new((void*) gvp) FemtoMcTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMcTrack;
     } else {
       p = new((void*) gvp) FemtoMcTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcTrack*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcTrack*) G__getstructoffset())->copy((FemtoMcTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FemtoMcTrack*) G__getstructoffset())->momentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcTrack*) G__getstructoffset())->momentum((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoMcTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoMcTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoMcTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMcTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_224_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMcTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_224_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoMcTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoMcTrack(*(FemtoMcTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoMcTrack G__TFemtoMcTrack;
static int G__FemtoDstFormat_Cint_224_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoMcTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoMcTrack*) (soff+(sizeof(FemtoMcTrack)*i)))->~G__TFemtoMcTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoMcTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoMcTrack*) (soff))->~G__TFemtoMcTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_224_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMcTrack* dest = (FemtoMcTrack*) G__getstructoffset();
   *dest = *(FemtoMcTrack*) libp->para[0].ref;
   const FemtoMcTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoMcVertex */
static int G__FemtoDstFormat_Cint_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMcVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMcVertex[n];
     } else {
       p = new((void*) gvp) FemtoMcVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMcVertex;
     } else {
       p = new((void*) gvp) FemtoMcVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcVertex*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcVertex*) G__getstructoffset())->copy((FemtoMcVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoMcVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoMcVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoMcVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMcVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMcVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMcVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMcVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoMcVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoMcVertex(*(FemtoMcVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoMcVertex G__TFemtoMcVertex;
static int G__FemtoDstFormat_Cint_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoMcVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoMcVertex*) (soff+(sizeof(FemtoMcVertex)*i)))->~G__TFemtoMcVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoMcVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoMcVertex*) (soff))->~G__TFemtoMcVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMcVertex* dest = (FemtoMcVertex*) G__getstructoffset();
   *dest = *(FemtoMcVertex*) libp->para[0].ref;
   const FemtoMcVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoMtdPidTraits */
static int G__FemtoDstFormat_Cint_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMtdPidTraits* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMtdPidTraits[n];
     } else {
       p = new((void*) gvp) FemtoMtdPidTraits[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoMtdPidTraits;
     } else {
       p = new((void*) gvp) FemtoMtdPidTraits;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMtdPidTraits*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMtdPidTraits*) G__getstructoffset())->copy((FemtoMtdPidTraits*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FemtoMtdPidTraits*) G__getstructoffset())->backleg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FemtoMtdPidTraits*) G__getstructoffset())->module());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FemtoMtdPidTraits*) G__getstructoffset())->cell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoMtdPidTraits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMtdPidTraits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoMtdPidTraits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoMtdPidTraits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoMtdPidTraits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMtdPidTraits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMtdPidTraits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoMtdPidTraits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoMtdPidTraits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoMtdPidTraits* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoMtdPidTraits(*(FemtoMtdPidTraits*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoMtdPidTraits G__TFemtoMtdPidTraits;
static int G__FemtoDstFormat_Cint_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoMtdPidTraits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoMtdPidTraits*) (soff+(sizeof(FemtoMtdPidTraits)*i)))->~G__TFemtoMtdPidTraits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoMtdPidTraits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoMtdPidTraits*) (soff))->~G__TFemtoMtdPidTraits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoMtdPidTraits* dest = (FemtoMtdPidTraits*) G__getstructoffset();
   *dest = *(FemtoMtdPidTraits*) libp->para[0].ref;
   const FemtoMtdPidTraits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoTrack */
static int G__FemtoDstFormat_Cint_232_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoTrack[n];
     } else {
       p = new((void*) gvp) FemtoTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoTrack;
     } else {
       p = new((void*) gvp) FemtoTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrack*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrack*) G__getstructoffset())->copy((FemtoTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((FemtoTrack*) G__getstructoffset())->momentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrack*) G__getstructoffset())->momentum((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((FemtoTrack*) G__getstructoffset())->lv((double) G__double(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoTrack(*(FemtoTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoTrack G__TFemtoTrack;
static int G__FemtoDstFormat_Cint_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoTrack*) (soff+(sizeof(FemtoTrack)*i)))->~G__TFemtoTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoTrack*) (soff))->~G__TFemtoTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoTrack* dest = (FemtoTrack*) G__getstructoffset();
   *dest = *(FemtoTrack*) libp->para[0].ref;
   const FemtoTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FemtoTrackHelix */
static int G__FemtoDstFormat_Cint_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoTrackHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoTrackHelix[n];
     } else {
       p = new((void*) gvp) FemtoTrackHelix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FemtoTrackHelix;
     } else {
       p = new((void*) gvp) FemtoTrackHelix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrackHelix*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrackHelix*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrackHelix*) G__getstructoffset())->copy((FemtoTrackHelix*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FemtoTrackHelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrackHelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FemtoTrackHelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FemtoTrackHelix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FemtoTrackHelix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrackHelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoTrackHelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FemtoTrackHelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FemtoDstFormat_Cint_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FemtoTrackHelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FemtoDstFormat_Cint_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FemtoTrackHelix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FemtoTrackHelix(*(FemtoTrackHelix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FemtoTrackHelix G__TFemtoTrackHelix;
static int G__FemtoDstFormat_Cint_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FemtoTrackHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FemtoTrackHelix*) (soff+(sizeof(FemtoTrackHelix)*i)))->~G__TFemtoTrackHelix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FemtoTrackHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FemtoTrackHelix*) (soff))->~G__TFemtoTrackHelix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FemtoDstFormat_Cint_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FemtoTrackHelix* dest = (FemtoTrackHelix*) G__getstructoffset();
   *dest = *(FemtoTrackHelix*) libp->para[0].ref;
   const FemtoTrackHelix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FemtoDstBranch */

/* FemtoBTofPidTraits */

/* FemtoEvent */

/* FemtoMcTrack */

/* FemtoMcVertex */

/* FemtoMtdPidTraits */

/* FemtoTrack */

/* FemtoTrackHelix */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncFemtoDstFormat_Cint {
 public:
  G__Sizep2memfuncFemtoDstFormat_Cint(): p(&G__Sizep2memfuncFemtoDstFormat_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncFemtoDstFormat_Cint::*p)();
};

size_t G__get_sizep2memfuncFemtoDstFormat_Cint()
{
  G__Sizep2memfuncFemtoDstFormat_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceFemtoDstFormat_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch))) {
     FemtoDstBranch *G__Lderived;
     G__Lderived=(FemtoDstBranch*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits))) {
     FemtoBTofPidTraits *G__Lderived;
     G__Lderived=(FemtoBTofPidTraits*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent))) {
     FemtoEvent *G__Lderived;
     G__Lderived=(FemtoEvent*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack))) {
     FemtoMcTrack *G__Lderived;
     G__Lderived=(FemtoMcTrack*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex))) {
     FemtoMcVertex *G__Lderived;
     G__Lderived=(FemtoMcVertex*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits))) {
     FemtoMtdPidTraits *G__Lderived;
     G__Lderived=(FemtoMtdPidTraits*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack))) {
     FemtoTrack *G__Lderived;
     G__Lderived=(FemtoTrack*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix))) {
     FemtoTrackHelix *G__Lderived;
     G__Lderived=(FemtoTrackHelix*)0x1000;
     {
       FemtoDstBranch *G__Lpbase=(FemtoDstBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix),G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableFemtoDstFormat_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FemtoDstBranch */
static void G__setup_memvarFemtoDstBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch));
   { FemtoDstBranch *p; p=(FemtoDstBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoBTofPidTraits */
static void G__setup_memvarFemtoBTofPidTraits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits));
   { FemtoBTofPidTraits *p; p=(FemtoBTofPidTraits*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mBTofBeta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mBTofBeta=",0,"beta");
   G__memvar_setup((void*)((long)(&p->mBTofYLocal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mBTofYLocal=",0,"ylocal ");
   G__memvar_setup((void*)((long)(&p->mBTofZLocal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mBTofZLocal=",0,"zlocal ");
   G__memvar_setup((void*)((long)(&p->mBTofMatchFlag)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"mBTofMatchFlag=",0,"0 - no match, 1 - one-to-one, 2 - one-to-multiple");
   G__memvar_setup((void*)((long)(&p->mIdTruth)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mIdTruth=",0,"the idTruth used to id which MCTrack caused this info, only used in MC");
   G__memvar_setup((void*)((long)(&p->mLength)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoEvent */
static void G__setup_memvarFemtoEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent));
   { FemtoEvent *p; p=(FemtoEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mPrimaryVertex_mX1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPrimaryVertex_mX1=",0,"Event VertexX");
   G__memvar_setup((void*)((long)(&p->mPrimaryVertex_mX2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPrimaryVertex_mX2=",0,"Event VertexY");
   G__memvar_setup((void*)((long)(&p->mPrimaryVertex_mX3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPrimaryVertex_mX3=",0,"Event VertexZ");
   G__memvar_setup((void*)((long)(&p->mWeight)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mWeight=",0,"Event weight from StRefMultCorr");
   G__memvar_setup((void*)((long)(&p->mRunId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mRunId=",0,"Run ID");
   G__memvar_setup((void*)((long)(&p->mEventId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mEventId=",0,"Event Id");
   G__memvar_setup((void*)((long)(&p->mTriggerWord)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"mTriggerWord=",0,"Trigger word");
   G__memvar_setup((void*)((long)(&p->mTriggerWordMtd)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"mTriggerWordMtd=",0,"MTD trigger word");
   G__memvar_setup((void*)((long)(&p->mGRefMult)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mGRefMult=",0,"global RefMult");
   G__memvar_setup((void*)((long)(&p->mPsi2)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mPsi2=",0,"event plane angle * 10000");
   G__memvar_setup((void*)((long)(&p->mBin16)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"mBin16=",0,"centrality bin 16");
   G__memvar_setup((void*)((long)(&p->mRunIndex)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mRunIndex=",0,"the run index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoMcTrack */
static void G__setup_memvarFemtoMcTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack));
   { FemtoMcTrack *p; p=(FemtoMcTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mPt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPt=",0,"primary track px");
   G__memvar_setup((void*)((long)(&p->mEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mEta=",0,"primary track py");
   G__memvar_setup((void*)((long)(&p->mPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPhi=",0,"primary track pz");
   G__memvar_setup((void*)((long)(&p->mId)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mId=",0,"track Id ");
   G__memvar_setup((void*)((long)(&p->mGeantPID)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mGeantPID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mCharge)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"mCharge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNHits)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"mNHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mParentIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mParentIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mAssociatedIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mAssociatedIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mStartVertexIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mStartVertexIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mStopVertexIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mStopVertexIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoMcVertex */
static void G__setup_memvarFemtoMcVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex));
   { FemtoMcVertex *p; p=(FemtoMcVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mId)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mX=",0,"position x");
   G__memvar_setup((void*)((long)(&p->mY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mY=",0,"position y");
   G__memvar_setup((void*)((long)(&p->mZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mZ=",0,"position z");
   G__memvar_setup((void*)((long)(&p->mParentIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mParentIndex=",0,"0 indexed parent ID");
   G__memvar_setup((void*)((long)(&p->mGeantProcess)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"mGeantProcess=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoMtdPidTraits */
static void G__setup_memvarFemtoMtdPidTraits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits));
   { FemtoMtdPidTraits *p; p=(FemtoMtdPidTraits*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mDeltaY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDeltaY=",0,"DeltaY between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->mDeltaZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDeltaZ=",0,"DeltaZ between matched track-hit pair");
   G__memvar_setup((void*)((long)(&p->mDeltaTimeOfFlight)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDeltaTimeOfFlight=",0,"Difference between measured and expected time-of-flight");
   G__memvar_setup((void*)((long)(&p->mMatchFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"mMatchFlag=",0,"Matching flag indicating multiple matches");
   G__memvar_setup((void*)((long)(&p->mMtdHitChan)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mMtdHitChan=",0,"(backleg-1) * 60 + (module-1) * 12 + cell");
   G__memvar_setup((void*)((long)(&p->mTriggerFlag)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"mTriggerFlag=",0,"Trigger Flag from MtdHit struct -1 = unset, otherwise value ");
   G__memvar_setup((void*)((long)(&p->mIdTruth)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mIdTruth=",0,"the idTruth used to id which MCTrack caused this info, only used in MC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoTrack */
static void G__setup_memvarFemtoTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack));
   { FemtoTrack *p; p=(FemtoTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mPt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPhi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mId)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"mId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mBTofPidTraitsIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mBTofPidTraitsIndex=",0,"index of the BTOF pidTratis in the event");
   G__memvar_setup((void*)((long)(&p->mMtdPidTraitsIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mMtdPidTraitsIndex=",0,"index of the MTD pidTratis in the event");
   G__memvar_setup((void*)((long)(&p->mEmcPidTraitsIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mEmcPidTraitsIndex=",0,"index of the EMC pidTratis in the event");
   G__memvar_setup((void*)((long)(&p->mHelixIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mHelixIndex=",0,"index of associated Track Helix");
   G__memvar_setup((void*)((long)(&p->mMcIndex)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mMcIndex=",0,"index of associated Track Helix");
   G__memvar_setup((void*)((long)(&p->mDedx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNHitsFit)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNHitsFit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNHitsMax)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNHitsMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNHitsDedx)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNHitsDedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNSigmaPion)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNSigmaPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNSigmaKaon)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNSigmaKaon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNSigmaProton)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNSigmaProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNSigmaElectron)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"mNSigmaElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mDCA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDCA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mChi2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mDCAXY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mDCAXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FemtoTrackHelix */
static void G__setup_memvarFemtoTrackHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix));
   { FemtoTrackHelix *p; p=(FemtoTrackHelix*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mPar)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mPar[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mMap0)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"mMap0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mMap1)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"mMap1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mDCA)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mDCA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarFemtoDstFormat_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFemtoDstBranch(void) {
   /* FemtoDstBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch));
   G__memfunc_setup("classname",951,G__FemtoDstFormat_Cint_168_0_1, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_168_0_2, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoDstBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoDstBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoDstBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoDstBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoDstBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoDstBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoDstBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoDstBranch::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FemtoDstBranch", 1522, G__FemtoDstFormat_Cint_168_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_168_0_15, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoDstBranch), -1, 1, 1, 1, 1, 0, "u 'FemtoDstBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoBTofPidTraits(void) {
   /* FemtoBTofPidTraits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoBTofPidTraits",1786,G__FemtoDstFormat_Cint_169_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_169_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_169_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoBTofPidTraits' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matchFlag",903,G__FemtoDstFormat_Cint_169_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matchFlag",903,G__FemtoDstFormat_Cint_169_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_169_0_7, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoBTofPidTraits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_169_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoBTofPidTraits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_169_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoBTofPidTraits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_169_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoBTofPidTraits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_169_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_169_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoBTofPidTraits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_169_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoBTofPidTraits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_169_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoBTofPidTraits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_169_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoBTofPidTraits::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoBTofPidTraits", 1786, G__FemtoDstFormat_Cint_169_0_19, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits), -1, 0, 1, 1, 1, 0, "u 'FemtoBTofPidTraits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoBTofPidTraits", 1912, G__FemtoDstFormat_Cint_169_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_169_0_21, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits), -1, 1, 1, 1, 1, 0, "u 'FemtoBTofPidTraits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoEvent(void) {
   /* FemtoEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoEvent",1021,G__FemtoDstFormat_Cint_170_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoEvent' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("psi",332,G__FemtoDstFormat_Cint_170_0_4, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("year",433,G__FemtoDstFormat_Cint_170_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertex",670,G__FemtoDstFormat_Cint_170_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDiMuon",808,G__FemtoDstFormat_Cint_170_0_7, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isDiMuonHFT",1034,G__FemtoDstFormat_Cint_170_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isSingleMuon",1245,G__FemtoDstFormat_Cint_170_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEMuon",704,G__FemtoDstFormat_Cint_170_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isMtdTrigger",1237,G__FemtoDstFormat_Cint_170_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - trigger", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_170_0_12, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_170_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_170_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_170_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_170_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_170_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_170_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_170_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_170_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoEvent", 1021, G__FemtoDstFormat_Cint_170_0_24, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent), -1, 0, 1, 1, 1, 0, "u 'FemtoEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoEvent", 1147, G__FemtoDstFormat_Cint_170_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_170_0_26, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoEvent), -1, 1, 1, 1, 1, 0, "u 'FemtoEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoMcTrack(void) {
   /* FemtoMcTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoMcTrack",1184,G__FemtoDstFormat_Cint_224_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_224_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_224_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoMcTrack' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__FemtoDstFormat_Cint_224_0_5, 117, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__FemtoDstFormat_Cint_224_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_224_0_7, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoMcTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_224_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_224_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoMcTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_224_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoMcTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_224_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_224_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_224_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMcTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_224_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_224_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMcTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoMcTrack", 1184, G__FemtoDstFormat_Cint_224_0_19, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack), -1, 0, 1, 1, 1, 0, "u 'FemtoMcTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoMcTrack", 1310, G__FemtoDstFormat_Cint_224_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_224_0_21, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcTrack), -1, 1, 1, 1, 1, 0, "u 'FemtoMcTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoMcVertex(void) {
   /* FemtoMcVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoMcVertex",1321,G__FemtoDstFormat_Cint_225_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_225_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_225_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoMcVertex' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_225_0_5, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoMcVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_225_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_225_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoMcVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_225_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoMcVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_225_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_225_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_225_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMcVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_225_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMcVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_225_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMcVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoMcVertex", 1321, G__FemtoDstFormat_Cint_225_0_17, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex), -1, 0, 1, 1, 1, 0, "u 'FemtoMcVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoMcVertex", 1447, G__FemtoDstFormat_Cint_225_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_225_0_19, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMcVertex), -1, 1, 1, 1, 1, 0, "u 'FemtoMcVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoMtdPidTraits(void) {
   /* FemtoMtdPidTraits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoMtdPidTraits",1716,G__FemtoDstFormat_Cint_226_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_226_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_226_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoMtdPidTraits' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("backleg",713,G__FemtoDstFormat_Cint_226_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("module",646,G__FemtoDstFormat_Cint_226_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cell",416,G__FemtoDstFormat_Cint_226_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_226_0_8, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoMtdPidTraits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_226_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMtdPidTraits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_226_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoMtdPidTraits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_226_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoMtdPidTraits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_226_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_226_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMtdPidTraits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_226_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMtdPidTraits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_226_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoMtdPidTraits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_226_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoMtdPidTraits::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoMtdPidTraits", 1716, G__FemtoDstFormat_Cint_226_0_20, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits), -1, 0, 1, 1, 1, 0, "u 'FemtoMtdPidTraits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoMtdPidTraits", 1842, G__FemtoDstFormat_Cint_226_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_226_0_22, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits), -1, 1, 1, 1, 1, 0, "u 'FemtoMtdPidTraits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoTrack(void) {
   /* FemtoTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoTrack",1008,G__FemtoDstFormat_Cint_232_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_232_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_232_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoTrack' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__FemtoDstFormat_Cint_232_0_5, 117, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__FemtoDstFormat_Cint_232_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lv",226,G__FemtoDstFormat_Cint_232_0_7, 117, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_232_0_8, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_232_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_232_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_232_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_232_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_232_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_232_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_232_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_232_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoTrack", 1008, G__FemtoDstFormat_Cint_232_0_20, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack), -1, 0, 1, 1, 1, 0, "u 'FemtoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoTrack", 1134, G__FemtoDstFormat_Cint_232_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_232_0_22, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrack), -1, 1, 1, 1, 1, 0, "u 'FemtoTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFemtoTrackHelix(void) {
   /* FemtoTrackHelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix));
   G__memfunc_setup("classname",951,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FemtoTrackHelix",1514,G__FemtoDstFormat_Cint_233_0_2, 105, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__FemtoDstFormat_Cint_233_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__FemtoDstFormat_Cint_233_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,G__FemtoDstFormat_Cint_233_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FemtoTrackHelix' - 0 - that", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FemtoDstFormat_Cint_233_0_6, 85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FemtoTrackHelix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FemtoDstFormat_Cint_233_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrackHelix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FemtoDstFormat_Cint_233_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FemtoTrackHelix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FemtoDstFormat_Cint_233_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FemtoTrackHelix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FemtoDstFormat_Cint_233_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FemtoDstFormat_Cint_233_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrackHelix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FemtoDstFormat_Cint_233_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoTrackHelix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FemtoDstFormat_Cint_233_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FemtoTrackHelix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FemtoDstFormat_Cint_233_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FemtoTrackHelix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FemtoTrackHelix", 1514, G__FemtoDstFormat_Cint_233_0_18, (int) ('i'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix), -1, 0, 1, 1, 1, 0, "u 'FemtoTrackHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FemtoTrackHelix", 1640, G__FemtoDstFormat_Cint_233_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FemtoDstFormat_Cint_233_0_20, (int) ('u'), G__get_linked_tagnum(&G__FemtoDstFormat_CintLN_FemtoTrackHelix), -1, 1, 1, 1, 1, 0, "u 'FemtoTrackHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncFemtoDstFormat_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalFemtoDstFormat_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcFemtoDstFormat_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__FemtoDstFormat_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoDstBranch = { "FemtoDstBranch" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoBTofPidTraits = { "FemtoBTofPidTraits" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoEvent = { "FemtoEvent" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoMcTrack = { "FemtoMcTrack" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoMcVertex = { "FemtoMcVertex" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoMtdPidTraits = { "FemtoMtdPidTraits" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoTrack = { "FemtoTrack" , 99 , -1 };
G__linked_taginfo G__FemtoDstFormat_CintLN_FemtoTrackHelix = { "FemtoTrackHelix" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableFemtoDstFormat_Cint() {
  G__FemtoDstFormat_CintLN_TClass.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TBuffer.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMemberInspector.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TObject.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_string.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoDstBranch.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoBTofPidTraits.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoEvent.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TVector3.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoMcTrack.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoMcVertex.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoMtdPidTraits.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_TLorentzVector.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoTrack.tagnum = -1 ;
  G__FemtoDstFormat_CintLN_FemtoTrackHelix.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableFemtoDstFormat_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_string);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoDstBranch),sizeof(FemtoDstBranch),-1,291841,(char*)NULL,G__setup_memvarFemtoDstBranch,G__setup_memfuncFemtoDstBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoBTofPidTraits),sizeof(FemtoBTofPidTraits),-1,292096,(char*)NULL,G__setup_memvarFemtoBTofPidTraits,G__setup_memfuncFemtoBTofPidTraits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoEvent),sizeof(FemtoEvent),-1,292096,(char*)NULL,G__setup_memvarFemtoEvent,G__setup_memfuncFemtoEvent);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoMcTrack),sizeof(FemtoMcTrack),-1,292096,(char*)NULL,G__setup_memvarFemtoMcTrack,G__setup_memfuncFemtoMcTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoMcVertex),sizeof(FemtoMcVertex),-1,292096,(char*)NULL,G__setup_memvarFemtoMcVertex,G__setup_memfuncFemtoMcVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoMtdPidTraits),sizeof(FemtoMtdPidTraits),-1,292096,(char*)NULL,G__setup_memvarFemtoMtdPidTraits,G__setup_memfuncFemtoMtdPidTraits);
   G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoTrack),sizeof(FemtoTrack),-1,292096,(char*)NULL,G__setup_memvarFemtoTrack,G__setup_memfuncFemtoTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FemtoDstFormat_CintLN_FemtoTrackHelix),sizeof(FemtoTrackHelix),-1,292096,(char*)NULL,G__setup_memvarFemtoTrackHelix,G__setup_memfuncFemtoTrackHelix);
}
extern "C" void G__cpp_setupFemtoDstFormat_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupFemtoDstFormat_Cint()");
  G__set_cpp_environmentFemtoDstFormat_Cint();
  G__cpp_setup_tagtableFemtoDstFormat_Cint();

  G__cpp_setup_inheritanceFemtoDstFormat_Cint();

  G__cpp_setup_typetableFemtoDstFormat_Cint();

  G__cpp_setup_memvarFemtoDstFormat_Cint();

  G__cpp_setup_memfuncFemtoDstFormat_Cint();
  G__cpp_setup_globalFemtoDstFormat_Cint();
  G__cpp_setup_funcFemtoDstFormat_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncFemtoDstFormat_Cint();
  return;
}
class G__cpp_setup_initFemtoDstFormat_Cint {
  public:
    G__cpp_setup_initFemtoDstFormat_Cint() { G__add_setup_func("FemtoDstFormat_Cint",(G__incsetup)(&G__cpp_setupFemtoDstFormat_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initFemtoDstFormat_Cint() { G__remove_setup_func("FemtoDstFormat_Cint"); }
};
G__cpp_setup_initFemtoDstFormat_Cint G__cpp_setup_initializerFemtoDstFormat_Cint;

